{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/interceptors/loading,interceptor.ts","webpack:///src/app/core/nav-bar/nav-bar.component.ts","webpack:///src/app/core/nav-bar/nav-bar.component.html","webpack:///src/app/core/services/busy.service.ts","webpack:///src/app/home/estate-details/estate-details.component.ts","webpack:///src/app/home/estate-details/estate-details.component.html","webpack:///src/app/home/estate-item/estate-item.component.ts","webpack:///src/app/home/estate-item/estate-item.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.service.ts","webpack:///src/app/shared/components/pager/pager.component.ts","webpack:///src/app/shared/components/pager/pager.component.html","webpack:///src/app/shared/components/paging-header/paging-header.component.ts","webpack:///src/app/shared/components/paging-header/paging-header.component.html","webpack:///src/app/shared/models/estateParams.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","CoreModule","LoadingInterceptor","busyService","next","handle","pipe","idle","NavBarComponent","BusyService","spinnerService","busyRequestCount","show","undefined","type","bdColor","color","hide","providedIn","EstateDetailsComponent","homeService","activatedRoute","loadEstate","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","getEstate","snapshot","paramMap","get","subscribe","estate","galleryImages","getImages","error","console","log","imageUrls","estatePhotos","item","push","small","imageUrl","medium","big","EstateItemComponent","HomeComponent","estateParams","sort","name","value","getEstates","getCategory","response","estates","data","pageNumber","pageIndex","pageSize","totalCount","count","category","shift","estateCategoryId","event","search","searchTerm","nativeElement","HomeService","http","baseUrl","apiUrl","params","append","toString","observe","body","PagerComponent","pageChanged","emit","page","onPagerChanged","PagingHeaderComponent","EstateParams","SharedModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { EstateDetailsComponent } from './home/estate-details/estate-details.component';\n\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: ':id', component: EstateDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'RealEstate';\n}\n","\n<ngx-spinner>\n  <h3>Loading ...</h3>\n</ngx-spinner>\n\n<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './home/home.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './core/interceptors/loading,interceptor';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    CoreModule,\n    HttpClientModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [NavBarComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule\n  ],\n  exports: [NavBarComponent]\n})\nexport class CoreModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../services/busy.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n  constructor(private busyService: BusyService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(req).pipe(\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"site-wrap\">\n   <div class=\"border-bottom bg-white top-bar\">\n      <div class=\"container\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-6 col-md-6\">\n            <p class=\"mb-0\">\n              <a href=\"#\" class=\"mr-3\"><span class=\"text-dark fa fa-phone\"></span> <span\n                  class=\"d-none d-md-inline-block ml-2 text-dark\">(011) 945 1224</span></a>\n              <a href=\"#\"><span class=\"text-dark fa fa-envelope\"></span> <span\n                  class=\"d-none d-md-inline-block ml-2 text-dark\">info@domain.com</span></a>\n            </p>\n          </div>\n          <div class=\"col-6 col-md-6 text-right\">\n            <a href=\"#\" class=\"mr-3\"><span class=\"text-dark fa fa-facebook\"></span></a>\n            <a href=\"#\" class=\"mr-3\"><span class=\"text-dark fa fa-twitter\"></span></a>\n            <a href=\"#\" class=\"mr-\"><span class=\"text-dark fa fa-linkedin\"></span></a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"site-navbar shadow-sm\">\n      <div class=\"container py-1\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-8 col-md-8 col-lg-4\">\n            <h1 class=\"\"><a routerLink='' class=\"h5 text-uppercase text-dark\"><strong><i class=\"fa fa-home\"></i> real estate</strong></a></h1>\n          </div>\n          <div class=\"col-4 col-md-4 col-lg-8\">\n            <nav class=\"site-navigation text-right text-md-right\" role=\"navigation\">\n\n              <div class=\"d-inline-block d-lg-none ml-md-0 mr-auto py-3\"><a href=\"#\"\n                  class=\"site-menu-toggle js-menu-toggle text-black\"><span class=\"icon-menu h3\"></span></a></div>\n\n              <ul class=\"site-menu js-clone-nav d-none d-lg-block\">\n                  <li><a [routerLink]=\"['/']\"\n                         routerLinkActive=\"active\"\n                         [routerLinkActiveOptions]=\"{exact: true}\">Home</a></li>\n                <li><a href=\"about.html\">About</a></li>\n                <li><a href=\"contact.html\">Contact</a></li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService} from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n\nconstructor(private spinnerService: NgxSpinnerService) { }\n\nbusy() {\n  this.busyRequestCount++;\n  this.spinnerService.show(undefined, {\n    type: 'ball-clip-rotate',\n    bdColor: 'rgba(255,255,255,0.7)',\n    color: '#333333'\n  });\n}\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0)\n    {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IEstateDetail } from 'src/app/shared/models/estateDetail';\nimport { HomeService } from '../home.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@nomadreservations/ngx-gallery';\n\n\n@Component({\n  selector: 'app-estate-details',\n  templateUrl: './estate-details.component.html',\n  styleUrls: ['./estate-details.component.scss']\n})\nexport class EstateDetailsComponent implements OnInit {\n      estate: IEstateDetail;\n      galleryOptions: NgxGalleryOptions[];\n      galleryImages: NgxGalleryImage[];\n\n\n\n  constructor(private homeService: HomeService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    this.loadEstate();\n\n    this.galleryOptions = [\n      {\n        width: '640px',\n        height: '640px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n      },\n    ];\n  }\n\n\n  loadEstate() {\n    this.homeService.getEstate( +this.activatedRoute.snapshot.paramMap.get('id')).subscribe(estate => {\n      this.estate = estate;\n      this.galleryImages = this.getImages();\n    }, error => {\n       console.log(error);\n    });\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (const item of this.estate.estatePhotos) {\n      imageUrls.push({\n         small: item.imageUrl,\n         medium: item.imageUrl,\n         big: item.imageUrl\n      });\n    }\n    return imageUrls;\n  }\n\n\n}\n","<ng-container *ngIf=\"estate\">\n<section class=\"single-property-section spad\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8\">\n        <div class=\"single-property\">\n          <div class=\"mt-5\">\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n          </div>\n          <div class=\"row mt-4\">\n            <div class=\"col-lg-6\">\n              <div class=\"property-header\">\n                <h3>{{estate.street}}</h3>\n                <h5>{{estate.city}}, {{estate.zipCode}}</h5>\n                <h5>{{estate.province}}</h5>\n              </div>\n            </div>\n            <div class=\"col-lg-4 text-right ml-4\">\n              <div class=\"property-header\">\n                   <ng-container>\n                     <div *ngIf=\"estate.estateCategory ==='Rent'\">\n                      <h3>{{estate.monthlyPrice | currency:'ZAR':'R'}} p/m</h3>\n                      </div>\n                   </ng-container>\n                   <ng-container>\n                     <div *ngIf=\"estate.estateCategory ==='Buy'\">\n                      <h3>{{estate.price | currency:'ZAR':'R'}}</h3>\n                      </div>\n                   </ng-container>\n                <p>{{estate.estateBedroom}} Bedrooms {{estate.estateType}}</p>\n\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-10 property-info-bar\">\n              <div class=\"pi-metas\">\n                <div class=\"pi-meta\">{{estate.estateBedroom}} Bed </div>\n                <div class=\"pi-meta\">{{estate.estateBathroom}} Baths</div>\n                <div class=\"pi-meta\">{{estate.garage}} Garage</div>\n                <div class=\"pi-meta\">{{estate.areaSize | number}} SF</div>\n                <div class=\"pi-meta\">{{estate.estateType}}</div>\n                <div class=\"pi-meta\">Built {{estate.yearBuilt | date}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"property-text\">\n            <h4>Description</h4>\n            {{estate.description}}\n          </div>\n          <div class=\"property-feature mt-4\">\n            <div class=\"row\">\n              <div class=\"col-lg-10\">\n                <h4>{{estate.estateType}} Features</h4>\n                <ul class=\"list-inline\">\n                  <li class=\"list-inline-item\" *ngFor=\"let item of estate.estateFeatures\">\n                    <strong>{{item.name}}</strong>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-4 col-md-8 sidebar\">\n        <div class=\"agent-widget\">\n          <img src=\"{{estate.agentImageUrl}}\" alt=\"\">\n          <div class=\"aw-text\">\n            <h4>{{estate.agentFullName}}</h4>\n            <h6>{{estate.agentTitle}}</h6>\n            <p>{{estate.agentDescription}}</p>\n            <a href=\"#\" class=\"readmore-btn\">Contact the agent</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n</ng-container>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { IEstate } from 'src/app/shared/models/estate';\n\n@Component({\n  selector: 'app-estate-item',\n  templateUrl: './estate-item.component.html',\n  styleUrls: ['./estate-item.component.scss']\n})\nexport class EstateItemComponent implements OnInit {\n  @Input() estate: IEstate;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n<div class=\"property-item\">\n  <ng-container class=\"container\">\n      <img class=\"pi-pic set-bg\" routerLink=\"/{{estate.id}}\" src=\"{{estate.imageUrl}}\">\n       <div [ngClass]=\"{'bg-danger': estate.estateCategory === 'Rent',\n                        'bg-primary': estate.estateCategory === 'Buy'}\"\n       class=\"label top-left ml-3 mt-3\">\n       {{estate.estateCategory}}\n      </div>\n  </ng-container>\n     <div class=\"pi-text\">\n       <ng-container >\n       <div class=\"pt-price\" *ngIf=\"estate.estateCategory ==='Rent'\">\n        {{estate.monthlyPrice | currency:'ZAR':'R'}} p/m</div>\n       </ng-container>\n       <ng-container>\n         <div class=\"pt-price\" *ngIf=\"estate.estateCategory ==='Buy'\">\n           {{estate.price | currency:'ZAR':'R'}}</div>\n       </ng-container>\n        <h5><a>{{estate.city}}, {{estate.estateType}}</a></h5>\n        <h6>{{estate.dateAdded | date}}</h6>\n        <p><span class=\"fa fa-map-marker\"> {{estate.street}} {{estate.city}} {{estate.zipCode}} {{estate.province}} </span></p>\n      <ul>\n        <li><i class=\"fa fa-object-group\"></i>{{estate.areaSize | number}}</li>\n        <li><i class=\"fa fa-bathtub\"></i>{{estate.estateBathroom}}</li>\n        <li><i class=\"fa fa-bed\"></i>{{estate.estateBedroom}}</li>\n        <li><i class=\"fa fa-automobile\"></i>{{estate.garage}}</li>\n    </ul>\n  </div>\n</div>\n\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { IEstate } from '../shared/models/estate';\nimport { ICategory } from '../shared/models/estateCategory';\nimport { IAgent } from '../shared/models/estateAgent';\nimport { EstateParams } from '../shared/models/estateParams';\nimport { HomeService } from './home.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\n\nexport class HomeComponent implements OnInit {\n  @ViewChild('search') searchTerm: ElementRef;\n   estates: IEstate[];\n   category: ICategory[];\n   agents: IAgent[];\n   estateParams = new EstateParams();\n   totalCount: number;\n   sort = [\n     { name: 'Newest', value: 'dateDesc' },\n     { name: 'Price Low', value: 'priceAsc'},\n     { name: 'Price High', value: 'priceDesc'},\n   ];\n\n\n  constructor(private homeService: HomeService) { }\n\n  ngOnInit(): void {\n    this.getEstates();\n    this.getCategory();\n  }\n\n  getEstates() {\n    this.homeService.getEstates(this.estateParams).subscribe(response => {\n      this.estates = response.data;\n      this.estateParams.pageNumber = response.pageIndex;\n      this.estateParams.pageSize = response.pageSize;\n      this.totalCount = response.count;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getCategory() {\n   this.homeService.getCategory().subscribe(response => {\n     this.category = [{ id: 0, name: 'Select Category' }, ...response];\n     this.category.shift();\n   }, error => {\n     console.log(error);\n   });\n  }\n\n  onCategorySelected(estateCategoryId: number){\n    this.estateParams.estateCategoryId = estateCategoryId;\n    this.estateParams.pageNumber = 1;\n    this.getEstates();\n  }\n\n  onSortSelected(sort: string){\n    this.estateParams.sort = sort;\n    this.getEstates();\n  }\n\n  onPageChanged(event: any) {\n    if (this.estateParams.pageNumber !== event){\n        this.estateParams.pageNumber = event;\n        this.getEstates();\n    }\n  }\n\n  onSearch() {\n    this.estateParams.search = this.searchTerm.nativeElement.value;\n    this.estateParams.pageNumber = 1;\n    this.getEstates();\n  }\n\n}\n","\n<ng-container *ngIf=\"category && estates\">\n<div style=\"background-color:#171717; padding-top: 50px;\">\n  <div class=\"container\">\n    <div class=\"row mb-5\">\n      <div class=\"col-md-7\">\n      <input (keyup.enter)=\"onSearch()\" class=\"form-control d-block rounded-0\" #search type=\"text\"\n      placeholder=\"Search by province, postcode or suburb\">\n      </div>\n       <div class=\"col-md-3\">\n       <input type=\"submit\" (click)=\"onSearch()\" class=\"btn btn-primary btn-block form-control-same-height rounded-0\"\n        value=\"Search\">\n       </div>\n       <div class=\"col-sm-6 col-md-4 col-lg-3 mb-4 mt-3\">\n        <div class=\"mb-4\">\n        <select class=\"custom-select mb-4\" class=\"form-control d-block rounded-0\" (change)=\"onSortSelected($event.target.value)\">\n          <option *ngFor=\"let sort of sort\" [value]=\"sort.value\">\n            {{sort.name}}\n          </option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-sm-5 col-md-4 col-lg-3 mb-4 mt-3\">\n      <button type=\"button\"  (click)=\"onCategorySelected($event.target.value)\"\n      *ngFor=\"let item of category\" [class.active]=\"item.id === estateParams.estateCategoryId\" [ngClass]=\"{'bg-danger': item.name === 'Rent',\n      'bg-primary': item.name === 'Buy'}\" class=\"btn text-white mr-3\" style=\"width: 100px;\" [value]=\"item.id\">{{item.name}}</button>\n  </div>\n  </div>\n</div>\n</div>\n\n<div class=\"container\">\n<div class=\"row\">\n  <div class=\"col-md-12 mb-5\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <app-paging-header [totalCount]=\"totalCount\" [pageSize]=\"this.estateParams.pageSize\"\n        [pageNumber]=\"this.estateParams.pageNumber\">\n      </app-paging-header>\n    </div>\n  </div>\n</div>\n</div>\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-4 mb-5\" *ngFor=\"let item of estates\">\n  <app-estate-item [estate]=\"item\"></app-estate-item>\n</div>\n</div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"totalCount > 0\">\n  <app-pager [pageSize]=\"estateParams.pageSize\" [totalCount]=\"totalCount\" (pageChanged)=\"onPageChanged($event)\">\n  </app-pager>\n</div>\n</ng-container>\n\n\n\n\n\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { EstateParams } from '../shared/models/estateParams';\nimport { map } from 'rxjs/operators';\nimport { ICategory } from '../shared/models/estateCategory';\nimport { IAgent } from '../shared/models/estateAgent';\nimport { IPagination } from '../shared/models/pagination';\nimport { IEstateDetail } from '../shared/models/estateDetail';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  baseUrl = environment.apiUrl;\n\nconstructor(private http: HttpClient) { }\n\n\ngetEstates(estateParams: EstateParams){\n  let params = new HttpParams();\n\n  if (estateParams.estateCategoryId !== 0){\n    params = params.append('estateCategoryId', estateParams.estateCategoryId.toString());\n  }\n\n  if (estateParams.search) {\n   params = params.append('search', estateParams.search);\n  }\n\n  params = params.append('sort', estateParams.sort);\n  params = params.append('pageIndex', estateParams.pageNumber.toString());\n  params = params.append('pageIndex', estateParams.pageSize.toString());\n\n  return this.http.get<IPagination>(this.baseUrl + 'estates', {observe: 'response', params})\n  .pipe(\n    map(response => {\n      return response.body;\n    })\n  );\n\n}\n\ngetEstate(id: number) {\n  return this.http.get<IEstateDetail>(this.baseUrl + 'estates/' + id);\n}\n\ngetCategory() {\n  return this.http.get<ICategory[]>(this.baseUrl + 'estates/category');\n}\n\ngetAgent() {\n  return this.http.get<IAgent[]>(this.baseUrl + 'estates/agents');\n}\n\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pager',\n  templateUrl: './pager.component.html',\n  styleUrls: ['./pager.component.scss'],\n})\nexport class PagerComponent implements OnInit {\n  @Input() totalCount: number;\n  @Input() pageSize: number;\n  @Output() pageChanged = new EventEmitter<number>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  onPagerChanged(event: any) {\n    this.pageChanged.emit(event.page);\n  }\n}\n","    <pagination [boundaryLinks]=\"true\"\n      [totalItems]=\"totalCount\"\n      (pageChanged)=\"onPagerChanged($event)\"\n      [itemsPerPage]=\"pageSize\"\n      previousText=\"&lsaquo;\"\n      nextText=\"&rsaquo;\"\n      firstText=\"&laquo;\"\n      lastText=\"&raquo;\">\n    </pagination>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-paging-header',\n  templateUrl: './paging-header.component.html',\n  styleUrls: ['./paging-header.component.scss']\n})\nexport class PagingHeaderComponent implements OnInit {\n  @Input() pageNumber: number;\n  @Input() pageSize: number;\n  @Input() totalCount: number;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","   <header>\n     <span *ngIf=\"totalCount && totalCount > 0\">\n       Showing\n       <strong>\n         {{(pageNumber - 1) * pageSize + 1}} -\n         {{pageNumber * pageSize\n                > this.totalCount ? this.totalCount\n                : pageNumber * pageSize\n              }}\n       </strong> of <strong> {{this.totalCount}} </strong> Results</span>\n     <span *ngIf=\"totalCount === 0\">\n       There are <strong>0</strong> results for this filter\n     </span>\n   </header>\n","export class EstateParams {\r\n  estateCategoryId = 0;\r\n  sort: string;\r\n  pageNumber = 1;\r\n  pageSize = 6;\r\n  search: string;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PagerComponent } from './components/pager/pager.component';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { RouterModule } from '@angular/router';\nimport { NgxGalleryModule } from '@nomadreservations/ngx-gallery';\nimport { PagingHeaderComponent } from './components/paging-header/paging-header.component';\n\n\n\n@NgModule({\n  declarations: [PagerComponent, PagingHeaderComponent],\n  imports: [\n    CommonModule,\n    PaginationModule.forRoot(),\n    CarouselModule.forRoot(),\n    RouterModule,\n    NgxGalleryModule\n  ],\n  exports: [\n    PaginationModule,\n    PagerComponent,\n    RouterModule,\n    NgxGalleryModule,\n    PagingHeaderComponent,\n    CarouselModule\n  ]\n\n})\nexport class SharedModule { }\n","export const environment = {\n  production: true,\n  apiUrl:'api/'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}